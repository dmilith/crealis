"""

    This is OpenSource Project;
    It's licensed on GPL/ LGPL public license;
    It's written by Daniel (dmilith) Dettlaff since August 2oo8.
    You can redistribute this project only with this header.

"""

release = Environment( CXX = 'g++ -O0 -ggdb -W' )
release.Program('test_sha1_speed_threads' , 'hashlib/sha1_speed_test_with_threads.cpp',
    LIBS=[ 'boost_thread', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release2 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release2.Program('test_sha1_speed_without_threads' , 'hashlib/sha1_speed_test_without_threads.cpp',
    LIBS=[ 'boost_thread', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release3 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release3.Program('test_asio_udp_server' , 'network/asio_udp_server_test.cpp',
    LIBS=[ 'boost_thread', 'boost_system', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release4 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release4.Program('test_asio_udp_client' , 'network/asio_udp_client_test.cpp',
    LIBS=[ 'boost_thread', 'boost_system', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release5 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release5.Program('test_asio_tcp_server' , 'network/asio_tcp_server_test.cpp',
    LIBS=[ 'boost_thread', 'boost_system', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore' ],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release6 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release6.Program('test_asio_tcp_client' , 'network/asio_tcp_client_test.cpp',
    LIBS=[ 'boost_thread', 'boost_system', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore' ],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release7 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release7.Program('test_serialization' , 'other/serialization_test.cpp',
    LIBS=[ 'boost_thread', 'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release8 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release8.Program('test_thread' , 'thread/thread_group_test.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release9 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release9.Program('test_thread_synchronization_1' , 'thread/synchronization_test.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release10 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release10.Program('test_thread_synchronization_2' , 'thread/synchronization_test_2.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release11 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release11.Program('test_ncurses_thread_monitor' , 'thread/ncurses_thread_monitor_test.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'job', 'character', 'coordinates', 'ncurses',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '../', '/usr/local/lib', '/usr/lib' ])

release12 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release12.Library('core', 'core/core.cpp')
release12.Program('test_core' , 'core/corechief.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '.', '../', '/usr/local/lib', '/usr/lib' ])

release13 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release13.Program('test_coordinates' , 'other/coordinates_test.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '.', '../', '/usr/local/lib', '/usr/lib' ])

release14 = Environment( CXX = 'g++ -O0 -ggdb -W' )
release14.Program('test_job_0' , 'jobs/job_test_0.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'purecore', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '.', '../', '/usr/local/lib', '/usr/lib' ])

release15 = Environment( CXX = 'g++ -Os -W' )
release15.Program('test_job_thread_0' , 'jobs/job_thread_test.cpp',
    LIBS=[ 'boost_thread',  'hl-sha', 'purecore', 'job', 'character', 'coordinates',
                                        'item', 'map', 'place', 'soul', 'theritory',
                                        'world', 'purecore'],
    LIBPATH=[ '.', '../', '/usr/local/lib', '/usr/lib' ])
